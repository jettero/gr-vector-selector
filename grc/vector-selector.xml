<?xml version="1.0"?>

<block>
    <name>Vector Selector</name>
    <key>vector_selector</key>
    <category>Stream Operators</category>
    <import>import grvectorselector</import>
    <make>grvectorselector.vector_selector(
            dtype    = $type.dtype,
            vec_len  = $vec_len,
            indices  = $indices,
            modality = $modality,
            debug    = $debug,
    )</make>

    <callback>change_settings($indices, $debug)</callback>

    <!--

    >>> from gnuradio import gr
    >>> gr.sizeof_gr_complex
    8
    >>> gr.sizeof_float
    4
    >>> gr.sizeof_int
    4
    >>> gr.sizeof_short
    2
    >>> gr.sizeof_char
    1

    >>> for x in [numpy.complex, numpy.float, numpy.int, numpy.short, numpy.byte]:
    ...    print numpy.dtype(x)
    ...
    complex128
    float64
    int64
    int16
    int8

    FIXME:
    complex64 is the only type I've actually tried/tested
    in principle, the others should be right, but I never
    actually tried them

    pretty sure they're right based on the python shell
    output above
    -->

	<param>
		<name>IO Type</name>
		<key>type</key>
        <value>complex</value>
		<type>enum</type>
		<option>
			<name>Complex</name>
			<key>complex</key>
            <opt>dtype:"complex64"</opt>
        </option>
        <option>
			<name>Float</name>
			<key>float</key>
            <opt>dtype:"float64"</opt>
		</option>
		<option>
			<name>Int</name>
			<key>int</key>
			<opt>dtype:"int64"</opt>
		</option>
		<option>
			<name>Short</name>
			<key>short</key>
			<opt>dtype:"int16"</opt>
		</option>
		<option>
			<name>Byte</name>
			<key>byte</key>
			<opt>dtype:"int8"</opt>
		</option>
	</param>

	<param>
		<name>Vec Length</name>
		<key>vec_len</key>
		<value>1024</value>
		<type>int</type>
	</param>

    <param>
        <name>Indices</name>
        <key>indices</key>
        <value>7,8,9</value>
        <type>int_vector</type>
    </param>

    <param>
        <name>Output Ports</name>
        <key>ports</key>
        <value>3</value>
        <type>int</type>
    </param>

    <param>
        <name>Operation Mode</name>
        <key>modality</key>
        <value>grvectorselector.INDEX_MODE</value>
        <type>int</type>
        <option>
            <name>input[idx(n)]</name>
			<key>grvectorselector.INDEX_MODE</key>
		</option>
        <option>
            <name>max(input)[idx(n)]</name>
			<key>grvectorselector.MINMAX_MODE</key>
        </option>
    </param>

    <param>
        <name>Spam</name>
        <key>debug</key>
        <value>False</value>
        <type>bool</type>
        <option>
			<name>spam the console</name>
			<key>True</key>
		</option>
        <option>
			<name>no debug</name>
			<key>False</key>
        </option>
    </param>

	<check>$vec_len &gt;= 1</check>
    <check>max($indices) &lt; $vec_len and min($indices) &gt; -1*$vec_len</check>
    <check>$ports == len($indices)</check>

	<sink>
		<name>in</name>
        <type>$type</type>
        <vlen>$vec_len</vlen>
	</sink>

	<source>
        <name>vslice</name>
		<type>$type</type>
        <vlen>2 if $modality == grvectorselector.MINMAX_MODE else 1</vlen>
		<nports>$ports</nports>
        <optional>True</optional>
	</source>

    <doc>
The vector selector picks items from input vectors and creates a stream for \
each index location.  It operates in two different modes: one mode chooses \
indexes from the vectors by position and one chooses from a list sorted in \
order of magnitude â€” whatever that might mean for the input.  The number of \
outputs will be equal to the number of indexes chose.  The type of output will \
match the input except that the vector length on output will depend on the \
operation mode.

Vector Length:
    The length of the vectors being fed to the VS input pad.

Operation Mode:
    index(input)
        each integer in the indices array indicates an input vector location from
        which to create an ouput stream

    max(input):
        the indexes name (n-1)th input slices from a vector sorted by sample
        magnitude

Indices:
    The indexes of interest.

Ports:
    The number of output ports (must match the number of indices)
    [NOTE: tried to compute this from len(indices), but GRC didn't handle it well on file reload.]

    </doc>

</block>
