<?xml version="1.0"?>

<block>
    <name>Vector Selector</name>
    <key>vector_selector</key>
    <category>Stream Operators</category>
    <import>import grvectorselector</import>
    <make>grvectorselector.vector_selector(dtype=$type.dtype,vec_len=$vec_len,indices=$indices,debug=$debug)</make>

    <!--

    >>> from gnuradio import gr
    >>> gr.sizeof_gr_complex
    8
    >>> gr.sizeof_float
    4
    >>> gr.sizeof_int
    4
    >>> gr.sizeof_short
    2
    >>> gr.sizeof_char
    1

    >>> for x in [numpy.complex, numpy.float, numpy.int, numpy.short, numpy.byte]:
    ...    print numpy.dtype(x)
    ...
    complex128
    float64
    int64
    int16
    int8

    FIXME:
    complex64 is the only type I've actually tried/tested
    in principle, the others should be right, but I never
    actually tried them

    pretty sure they're right based on the python shell
    output above
    -->

	<param>
		<name>IO Type</name>
		<key>type</key>
        <value>complex</value>
		<type>enum</type>
		<option>
			<name>Complex</name>
			<key>complex</key>
            <opt>dtype:"complex64"</opt>
        </option>
        <option>
			<name>Float</name>
			<key>float</key>
            <opt>dtype:"float64"</opt>
		</option>
		<option>
			<name>Int</name>
			<key>int</key>
			<opt>dtype:"int64"</opt>
		</option>
		<option>
			<name>Short</name>
			<key>short</key>
			<opt>dtype:"int16"</opt>
		</option>
		<option>
			<name>Byte</name>
			<key>byte</key>
			<opt>dtype:"int8"</opt>
		</option>
	</param>

	<param>
		<name>Vec Length</name>
		<key>vec_len</key>
		<value>1024</value>
		<type>int</type>
	</param>

    <param>
        <name>Indicies</name>
        <key>indices</key>
        <value>(7,8,9)</value>
        <type>int_vector</type>
    </param>

    <param>
        <name>Spam</name>
        <key>debug</key>
        <value>False</value>
        <type>bool</type>
        <option>
			<name>spam the console</name>
			<key>True</key>
		</option>
        <option>
			<name>no debug</name>
			<key>False</key>
        </option>
    </param>

	<check>$vec_len &gt;= 1</check>
    <check>max($indices) &lt;= $vec_len and min($indices) &gt;= 1</check>

	<sink>
		<name>in</name>
        <type>$type</type>
        <vlen>$vec_len</vlen>
	</sink>

	<source>
        <name>vslice</name>
		<type>$type</type>
        <vlen>1</vlen>
		<nports>len($indices)</nports>
        <optional>True</optional>
	</source>

    <doc>
Lorem ipsum dolor sit amet, at sea mnesarchum repudiandae. Vix te
quidam dolorum, est duis reformidans referrentur cu. Exerci
oblique insolens mel an, vix appetere adipiscing ea, ad sed idque
consul adipisci. Dolorem molestiae cum ad. Autem percipit
delicatissimi ex vim.

Maiorum splendide ea cum, ex qui stet quaerendum. No eum saepe
scaevola consectetuer, cu has postulant expetendis. Vim nominavi
phaedrum ex, vim minim officiis id, tempor labore offendit eu
vis. No agam oporteat sapientem ius, his singulis salutatus et.
Congue oblique delicata ius ne, est et meis primis, case
convenire has eu. Ex mea tale zril populo, homero expetenda
efficiendi ei mel.

Sea quot ullum debet id. An elit veritus ius. Te has stet aperiam
periculis, ullum doctus persecuti ex vis. Id mea putent animal
scripta, mea alia mucius salutatus in, vel dicta partem praesent
id.

Ut eum doming accusam, cum et case idque molestiae. Usu graece
verterem te. Est eu denique quaerendum, sed nemore melius
ullamcorper ei. Est ei dico iusto maluisset. In diceret corrumpit
duo, augue quidam possit quo no. Eu eos nostro reformidans.

Accumsan imperdiet eum ex, an est rebum aliquip quaerendum, ea
corpora lucilius nec. Eos no omnium similique, ius diceret
aliquam commune et, est id dicat epicuri. Per augue inermis eu,
est ne alia erant harum. Urbanitas similique nam eu, vim mentitum
cotidieque voluptatibus no. In vis ferri detraxit. Ne nulla
ornatus fabellas duo.
    </doc>

</block>
